import os
import requests
from bs4 import BeautifulSoup
from dotenv import load_dotenv
import openai
from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.lib import colors
from reportlab.lib.units import inch

# ================================
# LOAD ENV & SET OPENAI KEY
# ================================
load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")

# ================================
# SCRAPE COMPANY WEBSITE
# ================================
def scrape_company_info(website):
    """Extracts company info from the provided website."""
    try:
        response = requests.get(website, timeout=10)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, "html.parser")

        # Extract basic text content
        paragraphs = [p.get_text() for p in soup.find_all("p")]
        company_info = " ".join(paragraphs[:10])  # Limit to first 10 paragraphs
        return company_info.strip()
    except Exception as e:
        print(f"‚ö†Ô∏è Error scraping website: {e}")
        return ""

# ================================
# GENERATE BROCHURE CONTENT (GPT)
# ================================
def generate_brochure_content(company_name, website, extracted_info):
    """Uses OpenAI GPT to create brochure content."""
    prompt = f"""
    Create a professional company brochure content for:

    Company Name: {company_name}
    Website: {website}

    About the company:
    {extracted_info}

    Please include:
    - A compelling company overview
    - Products/Services offered
    - Key achievements
    - Mission & Vision
    - Why clients, investors, and recruits should choose this company
    Make it engaging and professional.
    """

    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "You are an expert business copywriter."},
            {"role": "user", "content": prompt},
        ],
        temperature=0.7,
        max_tokens=800
    )

    return response["choices"][0]["message"]["content"]

# ================================
# CREATE PDF BROCHURE
# ================================
def create_brochure_pdf(company_name, content):
    """Generates a professional brochure PDF."""
    filename = f"{company_name}_Brochure.pdf"
    pdf = canvas.Canvas(filename, pagesize=A4)
    width, height = A4

    # Title
    pdf.setFont("Helvetica-Bold", 20)
    pdf.setFillColor(colors.HexColor("#2E86C1"))
    pdf.drawCentredString(width / 2, height - 80, f"{company_name} - Company Brochure")

    # Body Text
    pdf.setFillColor(colors.black)
    pdf.setFont("Helvetica", 11)

    # Wrap long text into multiple lines
    text_object = pdf.beginText(50, height - 120)
    text_object.setFont("Helvetica", 11)
    for line in content.split("\n"):
        text_object.textLine(line.strip())
        text_object.textLine("")  # Add spacing

    pdf.drawText(text_object)

    # Footer
    pdf.setFont("Helvetica-Oblique", 9)
    pdf.setFillColor(colors.grey)
    pdf.drawCentredString(width / 2, 40, "Generated by AI Brochure Builder")

    pdf.save()
    return filename

# ================================
# MAIN FUNCTION
# ================================
def main():
    print("=== Company Brochure Builder ===")
    company_name = input("Enter company name: ").strip()
    website = input("Enter company website (e.g. https://example.com): ").strip()

    print("\nüîç Scraping company information...")
    extracted_info = scrape_company_info(website)

    print("ü§ñ Generating brochure content using OpenAI GPT...")
    content = generate_brochure_content(company_name, website, extracted_info)

    print("üìÑ Creating brochure PDF...")
    filename = create_brochure_pdf(company_name, content)

    print(f"‚úÖ Brochure created successfully: {filename}")

# ================================
# RUN THE SCRIPT
# ================================
if __name__ == "__main__":
    main()
